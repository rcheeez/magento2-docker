version: "3.8"

services:
  php-fpm:
    build: ./docker/php
    volumes:
      - ./magento:/var/www/html
      - ./magento/auth.json:/root/.composer/auth.json
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
      - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
    depends_on:
      - mysql
      - elasticsearch
      - redis
    networks:
      - magento

  nginx:
    image: nginx:latest
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./magento:/var/www/html
      - ./certs:/etc/nginx/certs
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - php-fpm
      - varnish
    networks:
      - magento

  mysql:
    image: mysql:8
    environment:
      MYSQL_USER: magento
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: magento
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - magento

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - magento

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - magento

  varnish:
    build: ./docker/varnish
    ports:
      - "6081:6081"
    volumes:
      - ./docker/varnish/default.vcl:/etc/varnish/default.vcl
    networks:
      - magento

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    depends_on:
      - mysql
    ports:
      - "8080:80"
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - PMA_ARBITRARY=1
    networks:
      - magento

volumes:
  db_data:

networks:
  magento:
    driver: bridge